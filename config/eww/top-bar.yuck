(defwindow top-bar [monitor]
  :monitor monitor
  :geometry (geometry
    :anchor "top center"
    :width "100%"
    :height "2%"
  )
  :stacking "bg"
  :exclusive true
  :focusable "none"
  (top-bar
    :monitor monitor
  )
)

(defwidget top-bar [monitor]
  (box
    :class "top-bar"
    (workspaces
      :monitor monitor
    )
    (current-time
      :monitor monitor
    )
    (top-tray)
  )
)

(deflisten workspaces
  :initial `{"DP-1":[[1,"󰲠","active"]]}`
  "fish -c 'listen-events wsp'"
)

(defwidget workspaces [monitor]
  (box
    :class "workspaces"
    :halign "start"
    ; :space-evenly false
    (for wsp in {"${workspaces?.[monitor]}"?:[]}
      (button
        :class "${wsp[2]}"
        :onclick "hyprctl dispatch workspace ${wsp[0]}"
        {wsp[1]?:wsp[0]}
      )
    )
  )
)

(defwidget current-time [monitor]
  (eventbox
    :class "current-time"
    :onclick "eww open calendar-win --toggle --arg monitor=${monitor}"
    :halign "center"
    (box
      :space-evenly false
      (label
        :class "time"
        :text {per-five-s['time']}
      )
      (label
        :class "weekday"
        :text {per-five-s['weekday']}
      )
      (label
        :class "date"
        :text {per-five-s['date']}
      )
    )
  )
)

(defwidget top-tray []
  (box
    :class "top-tray"
    :orientation "h"
    :halign "end"
    :space-evenly false
    (nightmode)
    (theme)
    (powermenu)
  )
)

(defwindow calendar-win [monitor]
  :monitor monitor
  :stacking "fg"
  :exclusive false
  :geometry (geometry
    :anchor "top center"
    :y "0.1%"
    :width "13%"
  )
  (calendar)
)

(defwidget theme []
  (button
    :class "theme"
    :onclick "fish -c 'theme-choose light' & eww poll poll-once &"
    :onrightclick "fish -c 'theme-choose dark' & eww poll poll-once &"
    {poll-once["theme"]}
  )
)

(defwidget nightmode []
  (button
    :class "nightmode"
    :onclick "nohup hyprsunset > /dev/null 2>&1 & eww poll poll-once &"
    :onrightclick "pkill hyprsunset && eww poll poll-once &"
    {poll-once["nightmode"]}
  )
)

(defvar powermenu-revealed false)

(defwidget powermenu []
  (horizon-right-end
    (revealer-on-hover
      :var powermenu-revealed
      :varname "powermenu-revealed"
      :class "powermenu"
      (box
        (button
          :onclick "hyprlock &"
          :tooltip "Lock"
          :class "lock"
          ""
        )
        (button
          ; :onclick "systemctl reboot"
          :tooltip "Reboot"
          :class "reboot"
          ""
        )
        (button
          ; :onclick "loginctl kill-session $XDG_SESSION_ID"
          :tooltip "Logout"
          :class "logout"
          ""
        )
      )
      (button
        ; :onclick "systemctl poweroff"
        :tooltip "Poweroff"
        :class "poweroff"
        ""
      )
      (label :text "1")
    )
  )
)