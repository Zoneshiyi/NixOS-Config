(defwindow top-bar [monitor]
  :monitor monitor
  :geometry (geometry
    :anchor "top center"
    :width "100%"
    :height "2%"
  )
  :stacking "fg"
  :exclusive true
  :focusable "none"
  (top-bar
    :monitor monitor
  )
)

(defwidget top-bar [monitor]
  (box
    :class "top-bar"
    (workspaces
      :monitor monitor
    )
    (player-metadata)
    (top-tray
      :monitor monitor
    )
  )
)

(deflisten workspaces
  :initial `{"DP-1":[[1,"󰲠","active"]]}`
  "fish -c 'listen-events wsp'"
)

(defwidget workspaces [monitor]
  (box
    :class "workspaces"
    :halign "start"
    ; :space-evenly false
    (for wsp in {"${workspaces?.[monitor]}"?:[]}
      (button
        :class "${wsp[2]}"
        :onclick "hyprctl dispatch workspace ${wsp[0]}"
        {wsp[1]?:wsp[0]}
      )
    )
  )
)

(defwidget player-metadata []
  (eventbox
    :class "player-metadata"
    :halign "center"
    :onclick "playerctl play-pause"
    :onscroll "echo {} | rg -q -F 'down' && playerctl next || playerctl previous"
    :visible {"${player-metadata?.['status']}"!="null"?true:false}
    (box
      :space-evenly false
      (label
        :text {player-metadata['title']?:"󰐑"}
        :class "title"
      )
      (label
        :text {player-metadata['artist']}
        :class "artist"
      )
      (label
        :text {"${player-metadata['status']=='Playing'}"
        ?""
        :""
        }
        :class "status"
      )
    )
  )
)

(defwidget top-time [monitor]
  (eventbox
    :class "top-time"
    :onclick `eww open calendar-win --toggle --arg monitor=${monitor} --arg anchor="right top" --arg x="1%" --arg y="1%" --arg width="13%"`
    :halign "center"
    (box
      :space-evenly false
      (label
        :class "time"
        :text "${per-five-s['hour']}:${per-five-s['minute']}"
      )
      (label
        :class "weekday"
        :text {per-five-s['weekday']}
      )
      (label
        :class "date"
        :text "${per-five-s['month']}-${per-five-s['day']}"
      )
    )
  )
)

(defwidget top-tray [monitor]
  (box
    :class "top-tray"
    :orientation "h"
    :halign "end"
    :space-evenly false
    (nightmode)
    ; (theme)
    (horizon-separator)
    (top-time
      :monitor monitor
    )
    (horizon-separator)
    (powermenu)
  )
)

(defwidget theme []
  (button
    :class "theme"
    :onclick "fish -c 'theme-choose light' & eww poll poll-once &"
    :onrightclick "fish -c 'theme-choose dark' & eww poll poll-once &"
    {poll-once["theme"]}
  )
)

(defwidget nightmode []
  (button
    :class "nightmode"
    :onclick "nohup hyprsunset > /dev/null 2>&1 & eww poll poll-once &"
    :onrightclick "pkill hyprsunset && eww poll poll-once &"
    {poll-once["nightmode"]}
  )
)

(defvar powermenu-revealed false)

(defwidget powermenu []
  (horizon-end
    (revealer-on-hover
      :var powermenu-revealed
      :varname "powermenu-revealed"
      :class "powermenu"
      :transition "slideleft"
      :orientation "h"
      (box
        (button
          :onclick "hyprlock &"
          :tooltip "Lock"
          :class "lock"
          ""
        )
        (button
          ; :onclick "systemctl reboot"
          :tooltip "Reboot"
          :class "reboot"
          ""
        )
        (button
          ; :onclick "loginctl kill-session $XDG_SESSION_ID"
          :tooltip "Logout"
          :class "logout"
          ""
        )
      )
      (button
        ; :onclick "systemctl poweroff"
        :tooltip "Poweroff"
        :class "poweroff"
        ""
      )
      (label :text "1")
    )
  )
)